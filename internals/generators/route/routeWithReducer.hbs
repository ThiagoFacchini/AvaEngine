	{
			path: '{{ path }}',
			name: '{{ camelCase component }}',
			config: {},
			onEnter: onEnterHook,
			getComponent (nextState: Object, cb: Function) {
				const importModules = Promise.all([
					import('./views/{{ properCase component }}/reducer'),
					{{#if useSagas}}
					import('./views/{{ properCase component }}/sagas'),
					{{/if}}
					import('./views/{{ properCase component }}'),
				])

				const renderRoute = loadModule(cb)

				importModules.then(([reducer,{{#if useSagas}} sagas,{{/if}} component]) => {
					if (pathsLoaded.{{ camelCase component }} !== true) {
						injectReducer('{{ camelCase component }}', reducer.default)
						{{#if useSagas}}
						injectSagas(sagas.default)
						{{/if}}
					}

					if (currentPath === '{{ path }}') {
						renderRoute(component)
						pathsLoaded.{{ camelCase component }} = true
					}
				})

				importModules.catch(errorLoading)
			},
		},$1
